/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { AssetSummaryQuery, DataStreamQuery, Request } from "@iot-app-kit/core";
import { DataStream, MinimalViewPortConfig } from "@synchro-charts/core";
export namespace Components {
    interface IotAssetDetails {
        "query": AssetSummaryQuery;
    }
    interface IotBarChart {
        "isEditing": boolean | undefined;
        "query": DataStreamQuery;
        "viewport": MinimalViewPortConfig;
        "widgetId": string;
    }
    interface IotConnector {
        "query": DataStreamQuery;
        "renderFunc": ({ dataStreams }: { dataStreams: DataStream[] }) => unknown;
        "requestInfo": Request;
    }
    interface IotKpi {
        "isEditing": boolean | undefined;
        "query": DataStreamQuery;
        "viewport": MinimalViewPortConfig;
        "widgetId": string;
    }
    interface IotLineChart {
        "isEditing": boolean | undefined;
        "query": DataStreamQuery;
        "viewport": MinimalViewPortConfig;
        "widgetId": string;
    }
    interface IotScatterChart {
        "isEditing": boolean | undefined;
        "query": DataStreamQuery;
        "viewport": MinimalViewPortConfig;
        "widgetId": string;
    }
    interface IotStatusGrid {
        "isEditing": boolean | undefined;
        "query": DataStreamQuery;
        "viewport": MinimalViewPortConfig;
        "widgetId": string;
    }
    interface IotStatusTimeline {
        "isEditing": boolean | undefined;
        "query": DataStreamQuery;
        "viewport": MinimalViewPortConfig;
        "widgetId": string;
    }
    interface IotTable {
        "query": DataStreamQuery;
        "viewport": MinimalViewPortConfig;
        "widgetId": string;
    }
    interface IotTestRoutes {
    }
    interface TestingGround {
    }
}
declare global {
    interface HTMLIotAssetDetailsElement extends Components.IotAssetDetails, HTMLStencilElement {
    }
    var HTMLIotAssetDetailsElement: {
        prototype: HTMLIotAssetDetailsElement;
        new (): HTMLIotAssetDetailsElement;
    };
    interface HTMLIotBarChartElement extends Components.IotBarChart, HTMLStencilElement {
    }
    var HTMLIotBarChartElement: {
        prototype: HTMLIotBarChartElement;
        new (): HTMLIotBarChartElement;
    };
    interface HTMLIotConnectorElement extends Components.IotConnector, HTMLStencilElement {
    }
    var HTMLIotConnectorElement: {
        prototype: HTMLIotConnectorElement;
        new (): HTMLIotConnectorElement;
    };
    interface HTMLIotKpiElement extends Components.IotKpi, HTMLStencilElement {
    }
    var HTMLIotKpiElement: {
        prototype: HTMLIotKpiElement;
        new (): HTMLIotKpiElement;
    };
    interface HTMLIotLineChartElement extends Components.IotLineChart, HTMLStencilElement {
    }
    var HTMLIotLineChartElement: {
        prototype: HTMLIotLineChartElement;
        new (): HTMLIotLineChartElement;
    };
    interface HTMLIotScatterChartElement extends Components.IotScatterChart, HTMLStencilElement {
    }
    var HTMLIotScatterChartElement: {
        prototype: HTMLIotScatterChartElement;
        new (): HTMLIotScatterChartElement;
    };
    interface HTMLIotStatusGridElement extends Components.IotStatusGrid, HTMLStencilElement {
    }
    var HTMLIotStatusGridElement: {
        prototype: HTMLIotStatusGridElement;
        new (): HTMLIotStatusGridElement;
    };
    interface HTMLIotStatusTimelineElement extends Components.IotStatusTimeline, HTMLStencilElement {
    }
    var HTMLIotStatusTimelineElement: {
        prototype: HTMLIotStatusTimelineElement;
        new (): HTMLIotStatusTimelineElement;
    };
    interface HTMLIotTableElement extends Components.IotTable, HTMLStencilElement {
    }
    var HTMLIotTableElement: {
        prototype: HTMLIotTableElement;
        new (): HTMLIotTableElement;
    };
    interface HTMLIotTestRoutesElement extends Components.IotTestRoutes, HTMLStencilElement {
    }
    var HTMLIotTestRoutesElement: {
        prototype: HTMLIotTestRoutesElement;
        new (): HTMLIotTestRoutesElement;
    };
    interface HTMLTestingGroundElement extends Components.TestingGround, HTMLStencilElement {
    }
    var HTMLTestingGroundElement: {
        prototype: HTMLTestingGroundElement;
        new (): HTMLTestingGroundElement;
    };
    interface HTMLElementTagNameMap {
        "iot-asset-details": HTMLIotAssetDetailsElement;
        "iot-bar-chart": HTMLIotBarChartElement;
        "iot-connector": HTMLIotConnectorElement;
        "iot-kpi": HTMLIotKpiElement;
        "iot-line-chart": HTMLIotLineChartElement;
        "iot-scatter-chart": HTMLIotScatterChartElement;
        "iot-status-grid": HTMLIotStatusGridElement;
        "iot-status-timeline": HTMLIotStatusTimelineElement;
        "iot-table": HTMLIotTableElement;
        "iot-test-routes": HTMLIotTestRoutesElement;
        "testing-ground": HTMLTestingGroundElement;
    }
}
declare namespace LocalJSX {
    interface IotAssetDetails {
        "query"?: AssetSummaryQuery;
    }
    interface IotBarChart {
        "isEditing"?: boolean | undefined;
        "query"?: DataStreamQuery;
        "viewport"?: MinimalViewPortConfig;
        "widgetId"?: string;
    }
    interface IotConnector {
        "query"?: DataStreamQuery;
        "renderFunc"?: ({ dataStreams }: { dataStreams: DataStream[] }) => unknown;
        "requestInfo"?: Request;
    }
    interface IotKpi {
        "isEditing"?: boolean | undefined;
        "query"?: DataStreamQuery;
        "viewport"?: MinimalViewPortConfig;
        "widgetId"?: string;
    }
    interface IotLineChart {
        "isEditing"?: boolean | undefined;
        "query"?: DataStreamQuery;
        "viewport"?: MinimalViewPortConfig;
        "widgetId"?: string;
    }
    interface IotScatterChart {
        "isEditing"?: boolean | undefined;
        "query"?: DataStreamQuery;
        "viewport"?: MinimalViewPortConfig;
        "widgetId"?: string;
    }
    interface IotStatusGrid {
        "isEditing"?: boolean | undefined;
        "query"?: DataStreamQuery;
        "viewport"?: MinimalViewPortConfig;
        "widgetId"?: string;
    }
    interface IotStatusTimeline {
        "isEditing"?: boolean | undefined;
        "query"?: DataStreamQuery;
        "viewport"?: MinimalViewPortConfig;
        "widgetId"?: string;
    }
    interface IotTable {
        "query"?: DataStreamQuery;
        "viewport"?: MinimalViewPortConfig;
        "widgetId"?: string;
    }
    interface IotTestRoutes {
    }
    interface TestingGround {
    }
    interface IntrinsicElements {
        "iot-asset-details": IotAssetDetails;
        "iot-bar-chart": IotBarChart;
        "iot-connector": IotConnector;
        "iot-kpi": IotKpi;
        "iot-line-chart": IotLineChart;
        "iot-scatter-chart": IotScatterChart;
        "iot-status-grid": IotStatusGrid;
        "iot-status-timeline": IotStatusTimeline;
        "iot-table": IotTable;
        "iot-test-routes": IotTestRoutes;
        "testing-ground": TestingGround;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "iot-asset-details": LocalJSX.IotAssetDetails & JSXBase.HTMLAttributes<HTMLIotAssetDetailsElement>;
            "iot-bar-chart": LocalJSX.IotBarChart & JSXBase.HTMLAttributes<HTMLIotBarChartElement>;
            "iot-connector": LocalJSX.IotConnector & JSXBase.HTMLAttributes<HTMLIotConnectorElement>;
            "iot-kpi": LocalJSX.IotKpi & JSXBase.HTMLAttributes<HTMLIotKpiElement>;
            "iot-line-chart": LocalJSX.IotLineChart & JSXBase.HTMLAttributes<HTMLIotLineChartElement>;
            "iot-scatter-chart": LocalJSX.IotScatterChart & JSXBase.HTMLAttributes<HTMLIotScatterChartElement>;
            "iot-status-grid": LocalJSX.IotStatusGrid & JSXBase.HTMLAttributes<HTMLIotStatusGridElement>;
            "iot-status-timeline": LocalJSX.IotStatusTimeline & JSXBase.HTMLAttributes<HTMLIotStatusTimelineElement>;
            "iot-table": LocalJSX.IotTable & JSXBase.HTMLAttributes<HTMLIotTableElement>;
            "iot-test-routes": LocalJSX.IotTestRoutes & JSXBase.HTMLAttributes<HTMLIotTestRoutesElement>;
            "testing-ground": LocalJSX.TestingGround & JSXBase.HTMLAttributes<HTMLTestingGroundElement>;
        }
    }
}
