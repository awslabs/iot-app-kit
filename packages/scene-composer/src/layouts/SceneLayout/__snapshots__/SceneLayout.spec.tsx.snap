// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SceneLayout should not render camera preview if editing and non-camera component is on selectedNode 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c1 {
  background-color: colorBackgroundContainerHeader;
  z-index: 100;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c4 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  background-color: colorBackgroundContainerContent;
}

.c6 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c3 {
  background-color: colorBackgroundContainerContent;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 99;
}

.c21 {
  background-color: colorBackgroundContainerContent;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 100%;
}

.c14 {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 16%;
  height: 16%;
  pointer-events: none;
  z-index: 1;
  color: colorTextHeadingDefault;
}

.c14 > svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}

.c11 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c12 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
}

.c20 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1.06);
  -ms-transform: scale(1.06);
  transform: scale(1.06);
}

.c17 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1.04);
  -ms-transform: scale(1.04);
  transform: scale(1.04);
}

.c9 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  pointer-events: none;
  border-top: 1px solid colorBorderDividerDefault;
}

.c9:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c13 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  pointer-events: initial;
  border-top: 1px solid colorBorderDividerDefault;
}

.c13:hover {
  background-color: colorBackgroundDropdownItemHover;
}

.c13:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c18 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  pointer-events: none;
  background-color: colorBackgroundItemSelected;
  border-top: 1px solid colorBorderDividerDefault;
}

.c18:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c8 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-top: 3px solid colorBorderDividerDefault;
}

.c8:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c10 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 40px;
  height: 100%;
}

.c15 {
  display: none;
  position: absolute;
  left: 100%;
  top: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background-color: colorBackgroundDropdownItemDefault;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 1;
}

.c15 > div {
  border-top: 1px solid colorBorderDividerDefault;
}

.c15 > div:first-of-type {
  border-top: 0;
}

.c16 {
  padding: 0 20px 0 20px;
  white-space: nowrap;
}

.c19 {
  padding: 0 20px 0 0px;
  white-space: nowrap;
}

.c7 {
  position: absolute;
  left: 10px;
  top: 10px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 999;
  background-color: colorBackgroundDropdownItemDefault;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
    data-mocked="Box"
  />
  <div
    className="c2"
    data-mocked="Box"
  >
    <div
      className="c3"
      data-mocked="Box"
      isFloating={false}
    >
      <div
        className="tm-wrapper-left"
      >
        <div
          className="tm-content"
        >
          <div
            className="tm-collapse-panel open"
          >
            <div
              className="tm-sidePanelTabs"
              data-mocked="Tabs"
              tabs={
                Array [
                  Object {
                    "content": <SceneHierarchyPanel />,
                    "id": "Hierarchy",
                    "label": "Hierarchy",
                  },
                  Object {
                    "content": <SceneRulesPanel />,
                    "id": "Rules",
                    "label": "Rules",
                  },
                  Object {
                    "content": <SettingsPanel />,
                    "id": "Settings",
                    "label": "Settings",
                  },
                ]
              }
            />
          </div>
        </div>
        <div
          className="tm-handle"
          data-testid="handle"
          onClick={[Function]}
        >
          <div
            data-mocked="Icon"
            name="angle-left"
            size="small"
            variant="normal"
          />
        </div>
      </div>
    </div>
    <div
      className="c4"
      data-mocked="Box"
    >
      <div
        className="c5"
        data-mocked="Box"
        padding="xxs"
      >
        <TopBar />
      </div>
      <div
        className="c6"
        data-mocked="Box"
      >
        <div
          className="c7"
        >
          <div
            className="c8"
          >
            <div
              className="c8"
            >
              <div
                className="c9"
                data-testid="undo"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Undo"
                    role="img"
                    title="Undo"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      name="undo"
                      variant="disabled"
                    />
                  </span>
                </div>
              </div>
              <div
                className="c9"
                data-testid="redo"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Redo"
                    role="img"
                    title="Redo"
                  >
                    <div
                      className="c12"
                      data-mocked="Icon"
                      isMirrored={true}
                      name="undo"
                      variant="disabled"
                    />
                  </span>
                </div>
              </div>
            </div>
            <div
              className="c8"
            >
              <div
                className="c13"
                data-testid="add-object"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Add object"
                    role="img"
                    title="Add object"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      name="add-plus"
                      variant="normal"
                    />
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c13"
                      data-testid="add-object-empty"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add empty node
                      </div>
                    </div>
                    <div
                      className="c9"
                      data-testid="add-object-model"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="text-status-inactive"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add 3D model
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-light"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add light
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-view-camera"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add camera from current view
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-tag"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add tag
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-annotation"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add annotation
                      </div>
                    </div>
                    <div
                      className="c9"
                      data-testid="add-effect-model-shader"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="text-status-inactive"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add model shader
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-motion-indicator"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add motion indicator
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="c13"
                data-testid="camera-controls-orbit"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Orbit"
                    role="img"
                    title="Orbit"
                  >
                    <div
                      className="c17"
                      data-mocked="Icon"
                      scale={1.04}
                      variant="normal"
                    >
                      <div>
                        <span>
                          <svg
                            height={16}
                            width={16}
                          >
                            <g
                              fill="none"
                            >
                              <path
                                d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                stroke="currentColor"
                              />
                              <path
                                d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                fill="currentColor"
                              />
                              <path
                                d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                stroke="currentColor"
                              />
                              <path
                                d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                fill="currentColor"
                              />
                            </g>
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c18"
                      data-testid="camera-controls-orbit"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Orbit"
                          role="img"
                          title="Orbit"
                        >
                          <div
                            className="c17"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={16}
                                  width={16}
                                >
                                  <g
                                    fill="none"
                                  >
                                    <path
                                      d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                      fill="currentColor"
                                    />
                                    <path
                                      d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                      fill="currentColor"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Orbit
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="camera-controls-pan"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Pan"
                          role="img"
                          title="Pan"
                        >
                          <div
                            className="c17"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={14}
                                  width={14}
                                >
                                  <path
                                    d="M9.15 1.5a1 1 0 0 1 2 0m-4 0a1 1 0 1 1 2 0m2 2a1 1 0 0 1 2 0v5.9a4.1 4.1 0 0 1-4.1 4.1h-2A4.1 4.1 0 0 1 3.92 12l-2.8-3.34a1.21 1.21 0 0 1 .39-1.84 1.2 1.2 0 0 1 1.19.06l1.42.91h1V2.5a1 1 0 1 1 2 0m4.02 4.28.01-5.28m-2 5.28V1.5m-2 5.28V1.5"
                                    fill="none"
                                    stroke="currentColor"
                                  />
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Pan
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="c8"
            >
              <div
                className="c9"
                data-testid="delete"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Delete"
                    role="img"
                    title="Delete"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      variant="disabled"
                    >
                      <div>
                        <span>
                          <svg
                            viewBox="0 0 14 15"
                          >
                            <path
                              d="M9 0a1 1 0 0 1 1 1h3a1 1 0 0 1 .117 1.993L13 3h-.08l-.923 11.077a1 1 0 0 1-.878.916L11 15H3a1 1 0 0 1-.997-.923L1.079 3H1a1 1 0 0 1-.117-1.993L1 1h3a1 1 0 0 1 .883-.993L5 0h4Zm1.919 3H3.08l.846 10h6.147l.846-10Z"
                              fill="currentColor"
                              fillRule="nonzero"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
              </div>
              <div
                className="c13"
                data-testid="transform-translate"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Translate"
                    role="img"
                    title="Translate"
                  >
                    <div
                      className="c20"
                      data-mocked="Icon"
                      scale={1.06}
                      variant="normal"
                    >
                      <div>
                        <span>
                          <svg
                            viewBox="0 0 16 16"
                          >
                            <g
                              fill="currentColor"
                              fillRule="nonzero"
                              stroke="currentColor"
                              strokeLinejoin="round"
                              strokeWidth={1.2}
                            >
                              <path
                                d="M6.04 4h4l-2-3zM6.04 12h4l-2 3zM12 10V6l3 2zM4 10V6L1 8z"
                              />
                            </g>
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c18"
                      data-testid="transform-translate"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Translate"
                          role="img"
                          title="Translate"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="currentColor"
                                    fillRule="nonzero"
                                    stroke="currentColor"
                                    strokeLinejoin="round"
                                    strokeWidth={1.2}
                                  >
                                    <path
                                      d="M6.04 4h4l-2-3zM6.04 12h4l-2 3zM12 10V6l3 2zM4 10V6L1 8z"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Translate object
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="transform-rotate"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Rotate"
                          role="img"
                          title="Rotate"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="none"
                                    fillRule="evenodd"
                                    stroke="currentColor"
                                    strokeWidth={1.7}
                                    transform="translate(1)"
                                  >
                                    <path
                                      d="M9 5h5V0"
                                    />
                                    <path
                                      d="M0 8a7 7 0 0 1 7-7 6.87 6.87 0 0 1 6.3 4M5 11H0v5"
                                    />
                                    <path
                                      d="M14 8a7 7 0 0 1-7 7 6.87 6.87 0 0 1-6.3-4"
                                    />
                                    <circle
                                      cx="7"
                                      cy="8"
                                      fill="currentColor"
                                      fillRule="nonzero"
                                      r="1"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Rotate object
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="transform-scale"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Scale"
                          role="img"
                          title="Scale"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="none"
                                    fillRule="evenodd"
                                    stroke="currentColor"
                                    strokeWidth={1.7}
                                  >
                                    <path
                                      d="M.5 10.5v5h5v-5z"
                                      fill="currentColor"
                                      fillRule="nonzero"
                                    />
                                    <path
                                      d="M.5 10V.5h15v15H6"
                                    />
                                    <path
                                      d="M7 4h5v5M12 4 8 8"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Scale object
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c21"
      data-mocked="Box"
    >
      <div
        className="tm-wrapper-right"
      >
        <div
          className="tm-content"
        >
          <div
            className="tm-collapse-panel open"
          >
            <div
              className="tm-sidePanelTabs"
              data-mocked="Tabs"
              tabs={
                Array [
                  Object {
                    "content": <SceneNodeInspectorPanel />,
                    "id": "Inspector",
                    "label": "Inspector",
                  },
                ]
              }
            />
          </div>
        </div>
        <div
          className="tm-handle"
          data-testid="handle"
          onClick={[Function]}
        >
          <div
            data-mocked="Icon"
            name="angle-right"
            size="small"
            variant="normal"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`SceneLayout should render camera preview if editing and camera component is on selectedNode 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c1 {
  background-color: colorBackgroundContainerHeader;
  z-index: 100;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c4 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  background-color: colorBackgroundContainerContent;
}

.c6 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c3 {
  background-color: colorBackgroundContainerContent;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 99;
}

.c21 {
  background-color: colorBackgroundContainerContent;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 100%;
}

.c14 {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 16%;
  height: 16%;
  pointer-events: none;
  z-index: 1;
  color: colorTextHeadingDefault;
}

.c14 > svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}

.c11 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c12 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
}

.c20 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1.06);
  -ms-transform: scale(1.06);
  transform: scale(1.06);
}

.c17 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1.04);
  -ms-transform: scale(1.04);
  transform: scale(1.04);
}

.c9 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  pointer-events: none;
  border-top: 1px solid colorBorderDividerDefault;
}

.c9:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c13 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  pointer-events: initial;
  border-top: 1px solid colorBorderDividerDefault;
}

.c13:hover {
  background-color: colorBackgroundDropdownItemHover;
}

.c13:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c18 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  pointer-events: none;
  background-color: colorBackgroundItemSelected;
  border-top: 1px solid colorBorderDividerDefault;
}

.c18:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c8 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-top: 3px solid colorBorderDividerDefault;
}

.c8:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c10 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 40px;
  height: 100%;
}

.c15 {
  display: none;
  position: absolute;
  left: 100%;
  top: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background-color: colorBackgroundDropdownItemDefault;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 1;
}

.c15 > div {
  border-top: 1px solid colorBorderDividerDefault;
}

.c15 > div:first-of-type {
  border-top: 0;
}

.c16 {
  padding: 0 20px 0 20px;
  white-space: nowrap;
}

.c19 {
  padding: 0 20px 0 0px;
  white-space: nowrap;
}

.c7 {
  position: absolute;
  left: 10px;
  top: 10px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 999;
  background-color: colorBackgroundDropdownItemDefault;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
    data-mocked="Box"
  />
  <div
    className="c2"
    data-mocked="Box"
  >
    <div
      className="c3"
      data-mocked="Box"
      isFloating={false}
    >
      <div
        className="tm-wrapper-left"
      >
        <div
          className="tm-content"
        >
          <div
            className="tm-collapse-panel open"
          >
            <div
              className="tm-sidePanelTabs"
              data-mocked="Tabs"
              tabs={
                Array [
                  Object {
                    "content": <SceneHierarchyPanel />,
                    "id": "Hierarchy",
                    "label": "Hierarchy",
                  },
                  Object {
                    "content": <SceneRulesPanel />,
                    "id": "Rules",
                    "label": "Rules",
                  },
                  Object {
                    "content": <SettingsPanel />,
                    "id": "Settings",
                    "label": "Settings",
                  },
                ]
              }
            />
          </div>
        </div>
        <div
          className="tm-handle"
          data-testid="handle"
          onClick={[Function]}
        >
          <div
            data-mocked="Icon"
            name="angle-left"
            size="small"
            variant="normal"
          />
        </div>
      </div>
    </div>
    <div
      className="c4"
      data-mocked="Box"
    >
      <div
        className="c5"
        data-mocked="Box"
        padding="xxs"
      >
        <TopBar />
      </div>
      <div
        className="c6"
        data-mocked="Box"
      >
        <div
          className="c7"
        >
          <div
            className="c8"
          >
            <div
              className="c8"
            >
              <div
                className="c9"
                data-testid="undo"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Undo"
                    role="img"
                    title="Undo"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      name="undo"
                      variant="disabled"
                    />
                  </span>
                </div>
              </div>
              <div
                className="c9"
                data-testid="redo"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Redo"
                    role="img"
                    title="Redo"
                  >
                    <div
                      className="c12"
                      data-mocked="Icon"
                      isMirrored={true}
                      name="undo"
                      variant="disabled"
                    />
                  </span>
                </div>
              </div>
            </div>
            <div
              className="c8"
            >
              <div
                className="c13"
                data-testid="add-object"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Add object"
                    role="img"
                    title="Add object"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      name="add-plus"
                      variant="normal"
                    />
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c13"
                      data-testid="add-object-empty"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add empty node
                      </div>
                    </div>
                    <div
                      className="c9"
                      data-testid="add-object-model"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="text-status-inactive"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add 3D model
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-light"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add light
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-view-camera"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add camera from current view
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-tag"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add tag
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-annotation"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add annotation
                      </div>
                    </div>
                    <div
                      className="c9"
                      data-testid="add-effect-model-shader"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="text-status-inactive"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add model shader
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-motion-indicator"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add motion indicator
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="c13"
                data-testid="camera-controls-orbit"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Orbit"
                    role="img"
                    title="Orbit"
                  >
                    <div
                      className="c17"
                      data-mocked="Icon"
                      scale={1.04}
                      variant="normal"
                    >
                      <div>
                        <span>
                          <svg
                            height={16}
                            width={16}
                          >
                            <g
                              fill="none"
                            >
                              <path
                                d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                stroke="currentColor"
                              />
                              <path
                                d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                fill="currentColor"
                              />
                              <path
                                d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                stroke="currentColor"
                              />
                              <path
                                d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                fill="currentColor"
                              />
                            </g>
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c18"
                      data-testid="camera-controls-orbit"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Orbit"
                          role="img"
                          title="Orbit"
                        >
                          <div
                            className="c17"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={16}
                                  width={16}
                                >
                                  <g
                                    fill="none"
                                  >
                                    <path
                                      d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                      fill="currentColor"
                                    />
                                    <path
                                      d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                      fill="currentColor"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Orbit
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="camera-controls-pan"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Pan"
                          role="img"
                          title="Pan"
                        >
                          <div
                            className="c17"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={14}
                                  width={14}
                                >
                                  <path
                                    d="M9.15 1.5a1 1 0 0 1 2 0m-4 0a1 1 0 1 1 2 0m2 2a1 1 0 0 1 2 0v5.9a4.1 4.1 0 0 1-4.1 4.1h-2A4.1 4.1 0 0 1 3.92 12l-2.8-3.34a1.21 1.21 0 0 1 .39-1.84 1.2 1.2 0 0 1 1.19.06l1.42.91h1V2.5a1 1 0 1 1 2 0m4.02 4.28.01-5.28m-2 5.28V1.5m-2 5.28V1.5"
                                    fill="none"
                                    stroke="currentColor"
                                  />
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Pan
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="c8"
            >
              <div
                className="c9"
                data-testid="delete"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Delete"
                    role="img"
                    title="Delete"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      variant="disabled"
                    >
                      <div>
                        <span>
                          <svg
                            viewBox="0 0 14 15"
                          >
                            <path
                              d="M9 0a1 1 0 0 1 1 1h3a1 1 0 0 1 .117 1.993L13 3h-.08l-.923 11.077a1 1 0 0 1-.878.916L11 15H3a1 1 0 0 1-.997-.923L1.079 3H1a1 1 0 0 1-.117-1.993L1 1h3a1 1 0 0 1 .883-.993L5 0h4Zm1.919 3H3.08l.846 10h6.147l.846-10Z"
                              fill="currentColor"
                              fillRule="nonzero"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
              </div>
              <div
                className="c13"
                data-testid="transform-translate"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Translate"
                    role="img"
                    title="Translate"
                  >
                    <div
                      className="c20"
                      data-mocked="Icon"
                      scale={1.06}
                      variant="normal"
                    >
                      <div>
                        <span>
                          <svg
                            viewBox="0 0 16 16"
                          >
                            <g
                              fill="currentColor"
                              fillRule="nonzero"
                              stroke="currentColor"
                              strokeLinejoin="round"
                              strokeWidth={1.2}
                            >
                              <path
                                d="M6.04 4h4l-2-3zM6.04 12h4l-2 3zM12 10V6l3 2zM4 10V6L1 8z"
                              />
                            </g>
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c18"
                      data-testid="transform-translate"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Translate"
                          role="img"
                          title="Translate"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="currentColor"
                                    fillRule="nonzero"
                                    stroke="currentColor"
                                    strokeLinejoin="round"
                                    strokeWidth={1.2}
                                  >
                                    <path
                                      d="M6.04 4h4l-2-3zM6.04 12h4l-2 3zM12 10V6l3 2zM4 10V6L1 8z"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Translate object
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="transform-rotate"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Rotate"
                          role="img"
                          title="Rotate"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="none"
                                    fillRule="evenodd"
                                    stroke="currentColor"
                                    strokeWidth={1.7}
                                    transform="translate(1)"
                                  >
                                    <path
                                      d="M9 5h5V0"
                                    />
                                    <path
                                      d="M0 8a7 7 0 0 1 7-7 6.87 6.87 0 0 1 6.3 4M5 11H0v5"
                                    />
                                    <path
                                      d="M14 8a7 7 0 0 1-7 7 6.87 6.87 0 0 1-6.3-4"
                                    />
                                    <circle
                                      cx="7"
                                      cy="8"
                                      fill="currentColor"
                                      fillRule="nonzero"
                                      r="1"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Rotate object
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="transform-scale"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Scale"
                          role="img"
                          title="Scale"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="none"
                                    fillRule="evenodd"
                                    stroke="currentColor"
                                    strokeWidth={1.7}
                                  >
                                    <path
                                      d="M.5 10.5v5h5v-5z"
                                      fill="currentColor"
                                      fillRule="nonzero"
                                    />
                                    <path
                                      d="M.5 10V.5h15v15H6"
                                    />
                                    <path
                                      d="M7 4h5v5M12 4 8 8"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Scale object
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="tm-display-container"
        >
          <div
            className="tm-display-title"
          >
            Test Camera
          </div>
          <div
            className="tm-display-area"
          />
        </div>
      </div>
    </div>
    <div
      className="c21"
      data-mocked="Box"
    >
      <div
        className="tm-wrapper-right"
      >
        <div
          className="tm-content"
        >
          <div
            className="tm-collapse-panel open"
          >
            <div
              className="tm-sidePanelTabs"
              data-mocked="Tabs"
              tabs={
                Array [
                  Object {
                    "content": <SceneNodeInspectorPanel />,
                    "id": "Inspector",
                    "label": "Inspector",
                  },
                ]
              }
            />
          </div>
        </div>
        <div
          className="tm-handle"
          data-testid="handle"
          onClick={[Function]}
        >
          <div
            data-mocked="Icon"
            name="angle-right"
            size="small"
            variant="normal"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`SceneLayout should render correctly in Edit mode 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c1 {
  background-color: colorBackgroundContainerHeader;
  z-index: 100;
}

.c2 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c4 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  background-color: colorBackgroundContainerContent;
}

.c6 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c3 {
  background-color: colorBackgroundContainerContent;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 99;
}

.c21 {
  background-color: colorBackgroundContainerContent;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 100%;
}

.c14 {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 16%;
  height: 16%;
  pointer-events: none;
  z-index: 1;
  color: colorTextHeadingDefault;
}

.c14 > svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}

.c11 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c12 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
}

.c17 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1.04);
  -ms-transform: scale(1.04);
  transform: scale(1.04);
}

.c20 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1.06);
  -ms-transform: scale(1.06);
  transform: scale(1.06);
}

.c9 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  pointer-events: none;
  border-top: 1px solid colorBorderDividerDefault;
}

.c9:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c13 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  pointer-events: initial;
  border-top: 1px solid colorBorderDividerDefault;
}

.c13:hover {
  background-color: colorBackgroundDropdownItemHover;
}

.c13:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c18 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  pointer-events: none;
  background-color: colorBackgroundItemSelected;
  border-top: 1px solid colorBorderDividerDefault;
}

.c18:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c8 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-top: 3px solid colorBorderDividerDefault;
}

.c8:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c10 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 40px;
  height: 100%;
}

.c15 {
  display: none;
  position: absolute;
  left: 100%;
  top: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background-color: colorBackgroundDropdownItemDefault;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 1;
}

.c15 > div {
  border-top: 1px solid colorBorderDividerDefault;
}

.c15 > div:first-of-type {
  border-top: 0;
}

.c16 {
  padding: 0 20px 0 20px;
  white-space: nowrap;
}

.c19 {
  padding: 0 20px 0 0px;
  white-space: nowrap;
}

.c7 {
  position: absolute;
  left: 10px;
  top: 10px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 999;
  background-color: colorBackgroundDropdownItemDefault;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
    data-mocked="Box"
  />
  <div
    className="c2"
    data-mocked="Box"
  >
    <div
      className="c3"
      data-mocked="Box"
      isFloating={false}
    >
      <div
        className="tm-wrapper-left"
      >
        <div
          className="tm-content"
        >
          <div
            className="tm-collapse-panel open"
          >
            <div
              className="tm-sidePanelTabs"
              data-mocked="Tabs"
              tabs={
                Array [
                  Object {
                    "content": <SceneHierarchyPanel />,
                    "id": "Hierarchy",
                    "label": "Hierarchy",
                  },
                  Object {
                    "content": <SceneRulesPanel />,
                    "id": "Rules",
                    "label": "Rules",
                  },
                  Object {
                    "content": <SettingsPanel />,
                    "id": "Settings",
                    "label": "Settings",
                  },
                ]
              }
            />
          </div>
        </div>
        <div
          className="tm-handle"
          data-testid="handle"
          onClick={[Function]}
        >
          <div
            data-mocked="Icon"
            name="angle-left"
            size="small"
            variant="normal"
          />
        </div>
      </div>
    </div>
    <div
      className="c4"
      data-mocked="Box"
    >
      <div
        className="c5"
        data-mocked="Box"
        padding="xxs"
      >
        <TopBar />
      </div>
      <div
        className="c6"
        data-mocked="Box"
      >
        <div
          className="c7"
        >
          <div
            className="c8"
          >
            <div
              className="c8"
            >
              <div
                className="c9"
                data-testid="undo"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Undo"
                    role="img"
                    title="Undo"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      name="undo"
                      variant="disabled"
                    />
                  </span>
                </div>
              </div>
              <div
                className="c9"
                data-testid="redo"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Redo"
                    role="img"
                    title="Redo"
                  >
                    <div
                      className="c12"
                      data-mocked="Icon"
                      isMirrored={true}
                      name="undo"
                      variant="disabled"
                    />
                  </span>
                </div>
              </div>
            </div>
            <div
              className="c8"
            >
              <div
                className="c13"
                data-testid="add-object"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Add object"
                    role="img"
                    title="Add object"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      name="add-plus"
                      variant="normal"
                    />
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c13"
                      data-testid="add-object-empty"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add empty node
                      </div>
                    </div>
                    <div
                      className="c9"
                      data-testid="add-object-model"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="text-status-inactive"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add 3D model
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-light"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add light
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-view-camera"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add camera from current view
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-tag"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add tag
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-annotation"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add annotation
                      </div>
                    </div>
                    <div
                      className="c9"
                      data-testid="add-effect-model-shader"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="text-status-inactive"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add model shader
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="add-object-motion-indicator"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c16"
                        color="inherit"
                        data-mocked="Box"
                        variant="small"
                      >
                        Add motion indicator
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="c13"
                data-testid="camera-controls-orbit"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Orbit"
                    role="img"
                    title="Orbit"
                  >
                    <div
                      className="c17"
                      data-mocked="Icon"
                      scale={1.04}
                      variant="normal"
                    >
                      <div>
                        <span>
                          <svg
                            height={16}
                            width={16}
                          >
                            <g
                              fill="none"
                            >
                              <path
                                d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                stroke="currentColor"
                              />
                              <path
                                d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                fill="currentColor"
                              />
                              <path
                                d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                stroke="currentColor"
                              />
                              <path
                                d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                fill="currentColor"
                              />
                            </g>
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c18"
                      data-testid="camera-controls-orbit"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Orbit"
                          role="img"
                          title="Orbit"
                        >
                          <div
                            className="c17"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={16}
                                  width={16}
                                >
                                  <g
                                    fill="none"
                                  >
                                    <path
                                      d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                      fill="currentColor"
                                    />
                                    <path
                                      d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                      fill="currentColor"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Orbit
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="camera-controls-pan"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Pan"
                          role="img"
                          title="Pan"
                        >
                          <div
                            className="c17"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={14}
                                  width={14}
                                >
                                  <path
                                    d="M9.15 1.5a1 1 0 0 1 2 0m-4 0a1 1 0 1 1 2 0m2 2a1 1 0 0 1 2 0v5.9a4.1 4.1 0 0 1-4.1 4.1h-2A4.1 4.1 0 0 1 3.92 12l-2.8-3.34a1.21 1.21 0 0 1 .39-1.84 1.2 1.2 0 0 1 1.19.06l1.42.91h1V2.5a1 1 0 1 1 2 0m4.02 4.28.01-5.28m-2 5.28V1.5m-2 5.28V1.5"
                                    fill="none"
                                    stroke="currentColor"
                                  />
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Pan
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="c8"
            >
              <div
                className="c9"
                data-testid="delete"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Delete"
                    role="img"
                    title="Delete"
                  >
                    <div
                      className="c11"
                      data-mocked="Icon"
                      variant="disabled"
                    >
                      <div>
                        <span>
                          <svg
                            viewBox="0 0 14 15"
                          >
                            <path
                              d="M9 0a1 1 0 0 1 1 1h3a1 1 0 0 1 .117 1.993L13 3h-.08l-.923 11.077a1 1 0 0 1-.878.916L11 15H3a1 1 0 0 1-.997-.923L1.079 3H1a1 1 0 0 1-.117-1.993L1 1h3a1 1 0 0 1 .883-.993L5 0h4Zm1.919 3H3.08l.846 10h6.147l.846-10Z"
                              fill="currentColor"
                              fillRule="nonzero"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
              </div>
              <div
                className="c13"
                data-testid="transform-translate"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c10"
                >
                  <span
                    aria-label="Translate"
                    role="img"
                    title="Translate"
                  >
                    <div
                      className="c20"
                      data-mocked="Icon"
                      scale={1.06}
                      variant="normal"
                    >
                      <div>
                        <span>
                          <svg
                            viewBox="0 0 16 16"
                          >
                            <g
                              fill="currentColor"
                              fillRule="nonzero"
                              stroke="currentColor"
                              strokeLinejoin="round"
                              strokeWidth={1.2}
                            >
                              <path
                                d="M6.04 4h4l-2-3zM6.04 12h4l-2 3zM12 10V6l3 2zM4 10V6L1 8z"
                              />
                            </g>
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
                <div
                  className="c14"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c15"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c18"
                      data-testid="transform-translate"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Translate"
                          role="img"
                          title="Translate"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="currentColor"
                                    fillRule="nonzero"
                                    stroke="currentColor"
                                    strokeLinejoin="round"
                                    strokeWidth={1.2}
                                  >
                                    <path
                                      d="M6.04 4h4l-2-3zM6.04 12h4l-2 3zM12 10V6l3 2zM4 10V6L1 8z"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Translate object
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="transform-rotate"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Rotate"
                          role="img"
                          title="Rotate"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="none"
                                    fillRule="evenodd"
                                    stroke="currentColor"
                                    strokeWidth={1.7}
                                    transform="translate(1)"
                                  >
                                    <path
                                      d="M9 5h5V0"
                                    />
                                    <path
                                      d="M0 8a7 7 0 0 1 7-7 6.87 6.87 0 0 1 6.3 4M5 11H0v5"
                                    />
                                    <path
                                      d="M14 8a7 7 0 0 1-7 7 6.87 6.87 0 0 1-6.3-4"
                                    />
                                    <circle
                                      cx="7"
                                      cy="8"
                                      fill="currentColor"
                                      fillRule="nonzero"
                                      r="1"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Rotate object
                      </div>
                    </div>
                    <div
                      className="c13"
                      data-testid="transform-scale"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c10"
                      >
                        <span
                          aria-label="Scale"
                          role="img"
                          title="Scale"
                        >
                          <div
                            className="c20"
                            data-mocked="Icon"
                            scale={1.06}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  viewBox="0 0 16 16"
                                >
                                  <g
                                    fill="none"
                                    fillRule="evenodd"
                                    stroke="currentColor"
                                    strokeWidth={1.7}
                                  >
                                    <path
                                      d="M.5 10.5v5h5v-5z"
                                      fill="currentColor"
                                      fillRule="nonzero"
                                    />
                                    <path
                                      d="M.5 10V.5h15v15H6"
                                    />
                                    <path
                                      d="M7 4h5v5M12 4 8 8"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c19"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        Scale object
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c21"
      data-mocked="Box"
    >
      <div
        className="tm-wrapper-right"
      >
        <div
          className="tm-content"
        >
          <div
            className="tm-collapse-panel open"
          >
            <div
              className="tm-sidePanelTabs"
              data-mocked="Tabs"
              tabs={
                Array [
                  Object {
                    "content": <SceneNodeInspectorPanel />,
                    "id": "Inspector",
                    "label": "Inspector",
                  },
                ]
              }
            />
          </div>
        </div>
        <div
          className="tm-handle"
          data-testid="handle"
          onClick={[Function]}
        >
          <div
            data-mocked="Icon"
            name="angle-right"
            size="small"
            variant="normal"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`SceneLayout should render correctly in Viewing mode 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c1 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  background-color: colorBackgroundContainerContent;
}

.c5 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c2 {
  background-color: colorBackgroundContainerContent;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 99;
}

.c11 {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 16%;
  height: 16%;
  pointer-events: none;
  z-index: 1;
  color: colorTextHeadingDefault;
}

.c11 > svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}

.c10 {
  shape-rendering: geometricPrecision;
  -webkit-transform: scale(1.04);
  -ms-transform: scale(1.04);
  transform: scale(1.04);
}

.c8 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  pointer-events: initial;
  border-top: 1px solid colorBorderDividerDefault;
}

.c8:hover {
  background-color: colorBackgroundDropdownItemHover;
}

.c8:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c13 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  min-width: 40px;
  height: 40px;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  pointer-events: none;
  background-color: colorBackgroundItemSelected;
  border-top: 1px solid colorBorderDividerDefault;
}

.c13:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c7 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border-top: 3px solid colorBorderDividerDefault;
}

.c7:first-of-type {
  border-top: 0;
  border-left: 0;
}

.c9 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 40px;
  height: 100%;
}

.c12 {
  display: none;
  position: absolute;
  left: 100%;
  top: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background-color: colorBackgroundDropdownItemDefault;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 1;
}

.c12 > div {
  border-top: 1px solid colorBorderDividerDefault;
}

.c12 > div:first-of-type {
  border-top: 0;
}

.c14 {
  padding: 0 20px 0 0px;
  white-space: nowrap;
}

.c6 {
  position: absolute;
  left: 10px;
  top: 10px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 999;
  background-color: colorBackgroundDropdownItemDefault;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
    data-mocked="Box"
  >
    <div
      className="c2"
      data-mocked="Box"
      isFloating={false}
    >
      <div
        className="tm-wrapper-left"
      >
        <div
          className="tm-handle"
          data-testid="handle"
          onClick={[Function]}
        >
          <div
            data-mocked="Icon"
            name="angle-right"
            size="small"
            variant="normal"
          />
        </div>
      </div>
    </div>
    <div
      className="c3"
      data-mocked="Box"
    >
      <div
        className="c4"
        data-mocked="Box"
        padding="xxs"
      >
        <TopBar />
      </div>
      <div
        className="c5"
        data-mocked="Box"
      >
        <div
          className="c6"
        >
          <div
            className="c7"
          >
            <div
              className="c7"
            >
              <div
                className="c8"
                data-testid="camera-controls-orbit"
                onClick={[Function]}
                onKeyDown={[Function]}
                onPointerDown={[Function]}
                onPointerEnter={[Function]}
                onPointerLeave={[Function]}
                onPointerUp={[Function]}
                tabIndex={0}
              >
                <div
                  className="c9"
                >
                  <span
                    aria-label="Orbit"
                    role="img"
                    title="Orbit"
                  >
                    <div
                      className="c10"
                      data-mocked="Icon"
                      scale={1.04}
                      variant="normal"
                    >
                      <div>
                        <span>
                          <svg
                            height={16}
                            width={16}
                          >
                            <g
                              fill="none"
                            >
                              <path
                                d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                stroke="currentColor"
                              />
                              <path
                                d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                fill="currentColor"
                              />
                              <path
                                d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                stroke="currentColor"
                              />
                              <path
                                d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                fill="currentColor"
                              />
                            </g>
                          </svg>
                        </span>
                      </div>
                    </div>
                  </span>
                </div>
                <div
                  className="c11"
                >
                  <svg
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M16 0v16L0 0z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
                <div
                  className="c12"
                >
                  <div
                    style={
                      Object {
                        "maxHeight": undefined,
                        "overflowY": "auto",
                      }
                    }
                  >
                    <div
                      className="c13"
                      data-testid="camera-controls-orbit"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c9"
                      >
                        <span
                          aria-label="Orbit"
                          role="img"
                          title="Orbit"
                        >
                          <div
                            className="c10"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={16}
                                  width={16}
                                >
                                  <g
                                    fill="none"
                                  >
                                    <path
                                      d="M10.5 8.23c0 4.06-1.14 7.33-2.5 7.33s-2.5-3.35-2.5-7.5S6.62.56 8 .56c1 0 1.87 1.79 2.27 4.35"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m9.23 8.61 1.21-2.18 1.28 2.14z"
                                      fill="currentColor"
                                    />
                                    <path
                                      d="M7.84 10.56C3.77 10.54.5 9.43.5 8.06s3.36-2.5 7.5-2.5c4.14 0 7.5 1.12 7.5 2.5 0 1-1.78 1.88-4.35 2.27"
                                      stroke="currentColor"
                                    />
                                    <path
                                      d="m7.46 9.29 2.17 1.22-2.14 1.27z"
                                      fill="currentColor"
                                    />
                                  </g>
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c14"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Orbit
                      </div>
                    </div>
                    <div
                      className="c8"
                      data-testid="camera-controls-pan"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onPointerDown={[Function]}
                      onPointerEnter={[Function]}
                      onPointerLeave={[Function]}
                      onPointerUp={[Function]}
                      tabIndex={0}
                    >
                      <div
                        className="c9"
                      >
                        <span
                          aria-label="Pan"
                          role="img"
                          title="Pan"
                        >
                          <div
                            className="c10"
                            data-mocked="Icon"
                            scale={1.04}
                            variant="normal"
                          >
                            <div>
                              <span>
                                <svg
                                  height={14}
                                  width={14}
                                >
                                  <path
                                    d="M9.15 1.5a1 1 0 0 1 2 0m-4 0a1 1 0 1 1 2 0m2 2a1 1 0 0 1 2 0v5.9a4.1 4.1 0 0 1-4.1 4.1h-2A4.1 4.1 0 0 1 3.92 12l-2.8-3.34a1.21 1.21 0 0 1 .39-1.84 1.2 1.2 0 0 1 1.19.06l1.42.91h1V2.5a1 1 0 1 1 2 0m4.02 4.28.01-5.28m-2 5.28V1.5m-2 5.28V1.5"
                                    fill="none"
                                    stroke="currentColor"
                                  />
                                </svg>
                              </span>
                            </div>
                          </div>
                        </span>
                      </div>
                      <div
                        className="c14"
                        color="inherit"
                        data-mocked="Box"
                        leftPadding={0}
                        variant="small"
                      >
                        3D Pan
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
