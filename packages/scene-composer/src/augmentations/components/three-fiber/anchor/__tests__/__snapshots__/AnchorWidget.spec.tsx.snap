// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AnchorWidget should render correctly 1`] = `
<group
  visible={true}
>
  <group
    scale={
      Vector3 {
        "x": 1,
        "y": 1,
        "z": 1,
      }
    }
  >
    <lineSegments>
      <lineBasicMaterial
        color="#ffffff"
      />
      <bufferGeometry
        attach="geometry"
      />
    </lineSegments>
    <anchor
      isSelected={true}
      onClick={[Function]}
      position={
        Array [
          0,
          0,
          0,
        ]
      }
      scale={
        Array [
          0.5,
          0.5,
          1,
        ]
      }
      visualState="Info"
    >
      <div
        data-test-id="Selected"
      />
      <div
        data-test-id="Info"
      />
      <div
        data-test-id="Warning"
      />
      <div
        data-test-id="Error"
      />
      <div
        data-test-id="Video"
      />
    </anchor>
  </group>
</group>
`;

exports[`AnchorWidget should render correctly when not visible 1`] = `
<group
  visible={false}
>
  <group
    scale={
      Vector3 {
        "x": 1,
        "y": 1,
        "z": 1,
      }
    }
  >
    <lineSegments>
      <lineBasicMaterial
        color="#ffffff"
      />
      <bufferGeometry
        attach="geometry"
      />
    </lineSegments>
    <anchor
      isSelected={true}
      onClick={[Function]}
      position={
        Array [
          0,
          0,
          0,
        ]
      }
      scale={
        Array [
          0.5,
          0.5,
          1,
        ]
      }
      visualState="Info"
    >
      <div
        data-test-id="Selected"
      />
      <div
        data-test-id="Info"
      />
      <div
        data-test-id="Warning"
      />
      <div
        data-test-id="Error"
      />
      <div
        data-test-id="Video"
      />
    </anchor>
  </group>
</group>
`;

exports[`AnchorWidget should render correctly with an offset 1`] = `
<group
  visible={true}
>
  <group
    scale={
      Vector3 {
        "x": 1,
        "y": 1,
        "z": 1,
      }
    }
  >
    <lineSegments>
      <lineBasicMaterial
        color="#ffffff"
      />
      <bufferGeometry
        attach="geometry"
      />
    </lineSegments>
    <anchor
      isSelected={true}
      onClick={[Function]}
      position={
        Array [
          1,
          0,
          1,
        ]
      }
      scale={
        Array [
          0.5,
          0.5,
          1,
        ]
      }
      visualState="Info"
    >
      <div
        data-test-id="Selected"
      />
      <div
        data-test-id="Info"
      />
      <div
        data-test-id="Warning"
      />
      <div
        data-test-id="Error"
      />
      <div
        data-test-id="Video"
      />
    </anchor>
  </group>
</group>
`;

exports[`AnchorWidget should render correctly with non default tag settings 1`] = `
<group
  visible={true}
>
  <group
    scale={
      Vector3 {
        "x": 1,
        "y": 1,
        "z": 1,
      }
    }
  >
    <lineSegments>
      <lineBasicMaterial
        color="#ffffff"
      />
      <bufferGeometry
        attach="geometry"
      />
    </lineSegments>
    <anchor
      isSelected={true}
      onClick={[Function]}
      position={
        Array [
          0,
          0,
          0,
        ]
      }
      scale={
        Array [
          0.15000000000000002,
          0.15000000000000002,
          3,
        ]
      }
      visualState="Info"
    >
      <div
        data-test-id="Selected"
      />
      <div
        data-test-id="Info"
      />
      <div
        data-test-id="Warning"
      />
      <div
        data-test-id="Error"
      />
      <div
        data-test-id="Video"
      />
    </anchor>
  </group>
</group>
`;

exports[`AnchorWidget should render with a countered size when parent is scaled 1`] = `
<group
  visible={true}
>
  <group
    scale={
      Vector3 {
        "x": 0.5,
        "y": 0.5,
        "z": 0.5,
      }
    }
  >
    <lineSegments>
      <lineBasicMaterial
        color="#ffffff"
      />
      <bufferGeometry
        attach="geometry"
      />
    </lineSegments>
    <anchor
      isSelected={true}
      onClick={[Function]}
      position={
        Array [
          0,
          0,
          0,
        ]
      }
      scale={
        Array [
          0.5,
          0.5,
          1,
        ]
      }
      visualState="Info"
    >
      <div
        data-test-id="Selected"
      />
      <div
        data-test-id="Info"
      />
      <div
        data-test-id="Warning"
      />
      <div
        data-test-id="Error"
      />
      <div
        data-test-id="Video"
      />
    </anchor>
  </group>
</group>
`;
