// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TreeItem /> should render appropriate configuration "{"labelNode":{"key":null,"ref":null,"props":{"objectRef":"","labelText":"","componentTypes":[""]},"_owner":null,"_store":{}},"labelText":"","selected":false,"expandable":false}" 1`] = `
<div>
  <li
    class="tm-tree-item"
    role="treeitem"
  >
    <label
      aria-selected="false"
      class="tm-tree-item-inner"
    >
      <input
        type="radio"
        value=""
      />
      <div
        data-mocked="SceneNodeLabel"
      >
        {"objectRef":"","labelText":"","componentTypes":[""]}
      </div>
    </label>
    Item
  </li>
</div>
`;

exports[`<TreeItem /> should render appropriate configuration "{"labelNode":{"key":null,"ref":null,"props":{"objectRef":"","labelText":"Label 1","componentTypes":[""]},"_owner":null,"_store":{}},"labelText":"Label 1","selected":false,"expandable":false}" 1`] = `
<div>
  <li
    class="tm-tree-item"
    role="treeitem"
  >
    <label
      aria-selected="false"
      class="tm-tree-item-inner"
    >
      <input
        type="radio"
        value="Label 1"
      />
      <div
        data-mocked="SceneNodeLabel"
      >
        {"objectRef":"","labelText":"Label 1","componentTypes":[""]}
      </div>
    </label>
    Item
  </li>
</div>
`;

exports[`<TreeItem /> should render appropriate configuration "{"labelNode":{"key":null,"ref":null,"props":{"objectRef":"","labelText":"Label","componentTypes":[""]},"_owner":null,"_store":{}},"labelText":"Label","selected":false,"expandable":false}" 1`] = `
<div>
  <li
    class="tm-tree-item"
    role="treeitem"
  >
    <label
      aria-selected="false"
      class="tm-tree-item-inner"
    >
      <input
        type="radio"
        value="Label"
      />
      <div
        data-mocked="SceneNodeLabel"
      >
        {"objectRef":"","labelText":"Label","componentTypes":[""]}
      </div>
    </label>
    Item
  </li>
</div>
`;

exports[`<TreeItem /> should render appropriate configuration "{"labelNode":{"key":null,"ref":null,"props":{"objectRef":"","labelText":"Label","componentTypes":[""]},"_owner":null,"_store":{}},"labelText":"Label","selected":false,"expandable":true}" 1`] = `
<div>
  <li
    class="tm-tree-item expandable"
    role="treeitem"
  >
    <label
      aria-selected="false"
      class="tm-tree-item-inner"
    >
      <input
        type="radio"
        value="Label"
      />
      <div
        arialabel="Expand Label"
        class="tm-tree-item-expand-btn"
        data-mocked="Button"
        iconname="treeview-expand"
        variant="inline-icon"
      />
      <div
        data-mocked="SceneNodeLabel"
      >
        {"objectRef":"","labelText":"Label","componentTypes":[""]}
      </div>
    </label>
  </li>
</div>
`;

exports[`<TreeItem /> should render appropriate configuration "{"labelNode":{"key":null,"ref":null,"props":{"objectRef":"","labelText":"Label","componentTypes":[""]},"_owner":null,"_store":{}},"labelText":"Label","selected":true,"expandable":false}" 1`] = `
<div>
  <li
    class="tm-tree-item"
    role="treeitem"
  >
    <label
      aria-selected="true"
      class="tm-tree-item-inner selected"
    >
      <input
        checked=""
        type="radio"
        value="Label"
      />
      <div
        data-mocked="SceneNodeLabel"
      >
        {"objectRef":"","labelText":"Label","componentTypes":[""]}
      </div>
    </label>
    Item
  </li>
</div>
`;

exports[`<TreeItem /> should render appropriate configuration "{"labelNode":{"key":null,"ref":null,"props":{"objectRef":"","labelText":"Label","componentTypes":[""]},"_owner":null,"_store":{}},"labelText":"Label","selected":true,"expandable":true}" 1`] = `
<div>
  <li
    class="tm-tree-item expandable"
    role="treeitem"
  >
    <label
      aria-selected="true"
      class="tm-tree-item-inner selected"
    >
      <input
        checked=""
        type="radio"
        value="Label"
      />
      <div
        arialabel="Expand Label"
        class="tm-tree-item-expand-btn"
        data-mocked="Button"
        iconname="treeview-expand"
        variant="inline-icon"
      />
      <div
        data-mocked="SceneNodeLabel"
      >
        {"objectRef":"","labelText":"Label","componentTypes":[""]}
      </div>
    </label>
  </li>
</div>
`;
