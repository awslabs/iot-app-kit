// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render correct panels. DynamicSelect should render Dynamic Select correctly with existing options 1`] = `
<div>
  <div
    data-mocked="Select"
    options="[{"label":"10 units","value":"10"},{"label":"20 units","value":"20"},{"label":"30 units","value":"30"}]"
    selectedoption="{"label":"10 units","value":"10"}"
  />
</div>
`;

exports[`render correct panels. DynamicSelect should render Dynamic Select correctly with new option 1`] = `
<div>
  <div
    data-mocked="Select"
    options="[{"label":"10 units","value":"10"},{"label":"15 units","value":"15"},{"label":"20 units","value":"20"},{"label":"30 units","value":"30"}]"
    selectedoption="{"label":"15 units","value":"15"}"
  />
</div>
`;

exports[`render correct panels. render ExpandableInfoSection correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-gsFSXq dFvgUY"
        data-mocked="ExpandableSection"
      >
        <div>
          <div
            class="sc-dcJsrY ilhrxw"
          >
            <div
              data-mocked="TextContent"
            >
              <strong>
                testTile
              </strong>
            </div>
          </div>
        </div>
        <div
          data-mocked="Box"
          padding="{"left":"m","right":"m","top":"xxs","bottom":"xxs"}"
        >
          <div
            data-mocked="SpaceBetween"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-gsFSXq dFvgUY"
      data-mocked="ExpandableSection"
    >
      <div>
        <div
          class="sc-dcJsrY ilhrxw"
        >
          <div
            data-mocked="TextContent"
          >
            <strong>
              testTile
            </strong>
          </div>
        </div>
      </div>
      <div
        data-mocked="Box"
        padding="{"left":"m","right":"m","top":"xxs","bottom":"xxs"}"
      >
        <div
          data-mocked="SpaceBetween"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`render correct panels. render Matrix3XInputGrid correctly. 1`] = `
<div>
  <div
    data-mocked="Box"
  >
    <div
      data-mocked="Box"
      margin="{"bottom":"xxs"}"
    >
      <label
        id="gridName_label"
      >
        gridName
      </label>
    </div>
     
    <div
      data-mocked="Grid"
      griddefinition="[{"colspan":4},{"colspan":4},{"colspan":4}]"
    >
      <div
        class="sc-gEvEer dfsMpp"
      >
        <div
          class="sc-fqkvVR bxVbvh"
        >
          <div
            data-mocked="TextContent"
          >
            <label
              for="gridName_input_l1"
            >
              l1
            </label>
             
          </div>
        </div>
        <div
          class="sc-iGgWBj kumTxJ"
        >
          <div
            arialabelledby="gridName_input_l1 gridName_label"
            controlid="gridName_input_l1"
            data-mocked="Input"
            value="1"
          />
        </div>
      </div>
      <div
        class="sc-gEvEer dfsMpp"
      >
        <div
          class="sc-fqkvVR bxVbvh"
        >
          <div
            data-mocked="TextContent"
          >
            <label
              for="gridName_input_l2"
            >
              l2
            </label>
             
          </div>
        </div>
        <div
          class="sc-iGgWBj kumTxJ"
        >
          <div
            arialabelledby="gridName_input_l2 gridName_label"
            controlid="gridName_input_l2"
            data-mocked="Input"
            value="2"
          />
        </div>
      </div>
      <div
        class="sc-gEvEer dfsMpp"
      >
        <div
          class="sc-fqkvVR bxVbvh"
        >
          <div
            data-mocked="TextContent"
          >
            <label
              for="gridName_input_l3"
            >
              l3
            </label>
             
          </div>
        </div>
        <div
          class="sc-iGgWBj kumTxJ"
        >
          <div
            arialabelledby="gridName_input_l3 gridName_label"
            controlid="gridName_input_l3"
            data-mocked="Input"
            value="3"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`render correct panels. render Matrix3XInputGrid readonly correctly. 1`] = `
<div>
  <div
    data-mocked="Box"
  >
    <div
      data-mocked="Box"
      margin="{"bottom":"xxs"}"
    >
      <label
        id="gridName_label"
      >
        gridName
      </label>
    </div>
     
    <div
      data-mocked="Grid"
      griddefinition="[{"colspan":4},{"colspan":4},{"colspan":4}]"
    >
      <div
        class="sc-gEvEer dfsMpp"
      >
        <div
          class="sc-fqkvVR bxVbvh"
        >
          <div
            data-mocked="TextContent"
          >
            <label
              for="gridName_input_l1"
            >
              l1
            </label>
             
          </div>
        </div>
        <div
          class="sc-iGgWBj kumTxJ"
        >
          <div
            data-mocked="TextContent"
          >
             
            1
             
          </div>
        </div>
      </div>
      <div
        class="sc-gEvEer dfsMpp"
      >
        <div
          class="sc-fqkvVR bxVbvh"
        >
          <div
            data-mocked="TextContent"
          >
            <label
              for="gridName_input_l2"
            >
              l2
            </label>
             
          </div>
        </div>
        <div
          class="sc-iGgWBj kumTxJ"
        >
          <div
            data-mocked="TextContent"
          >
             
            2
             
          </div>
        </div>
      </div>
      <div
        class="sc-gEvEer dfsMpp"
      >
        <div
          class="sc-fqkvVR bxVbvh"
        >
          <div
            data-mocked="TextContent"
          >
            <label
              for="gridName_input_l3"
            >
              l3
            </label>
             
          </div>
        </div>
        <div
          class="sc-iGgWBj kumTxJ"
        >
          <div
            data-mocked="TextContent"
          >
             
            3
             
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
