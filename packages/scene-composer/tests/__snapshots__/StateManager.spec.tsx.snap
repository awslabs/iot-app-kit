// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StateManager should render correctly 1`] = `
<SceneLayout
  LoadingView={
    <Provider>
      <LoadingProgress />
    </Provider>
  }
  externalLibraryConfig={Object {}}
  isViewing={false}
  onPointerMissed={[Function]}
  showMessageModal={true}
/>
`;

exports[`StateManager should render with Failed to fetch scene content 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c4 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c5 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  background-color: rgba(0,0,0,0.7);
}

.c2 {
  width: 600px;
  margin: auto;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 1000;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      data-mocked="Container"
    >
      <div>
        <div
          data-mocked="Header"
          variant="h2"
        >
          Error
        </div>
      </div>
      <div
        data-mocked="TextContent"
      >
        <p>
          Failed to fetch scene content
        </p>
      </div>
    </div>
  </div>
  <div
    className="c3"
    data-mocked="Box"
  >
    <div
      className="c4"
      data-mocked="Box"
    >
      <div
        className="c5"
        data-mocked="Box"
      />
    </div>
  </div>
</div>
`;

exports[`StateManager should render with empty scene url error 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c4 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c5 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  background-color: rgba(0,0,0,0.7);
}

.c2 {
  width: 600px;
  margin: auto;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 1000;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      data-mocked="Container"
    >
      <div>
        <div
          data-mocked="Header"
          variant="h2"
        >
          Error
        </div>
      </div>
      <div
        data-mocked="TextContent"
      >
        <p>
          Got empty scene url
        </p>
      </div>
    </div>
  </div>
  <div
    className="c3"
    data-mocked="Box"
  >
    <div
      className="c4"
      data-mocked="Box"
    >
      <div
        className="c5"
        data-mocked="Box"
      />
    </div>
  </div>
</div>
`;

exports[`StateManager should render with fetch scene content API error 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c4 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c5 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  background-color: rgba(0,0,0,0.7);
}

.c2 {
  width: 600px;
  margin: auto;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 1000;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      data-mocked="Container"
    >
      <div>
        <div
          data-mocked="Header"
          variant="h2"
        >
          Error
        </div>
      </div>
      <div
        data-mocked="TextContent"
      >
        <p>
          Random error
        </p>
      </div>
    </div>
  </div>
  <div
    className="c3"
    data-mocked="Box"
  >
    <div
      className="c4"
      data-mocked="Box"
    >
      <div
        className="c5"
        data-mocked="Box"
      />
    </div>
  </div>
</div>
`;

exports[`StateManager should render with get scene uri error 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: colorBackgroundLayoutMain;
}

.c3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  position: relative;
  overflow: hidden;
}

.c4 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.c5 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 4px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  background-color: rgba(0,0,0,0.7);
}

.c2 {
  width: 600px;
  margin: auto;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  z-index: 1000;
}

<div
  className="c0"
  data-mocked="Box"
>
  <div
    className="c1"
  >
    <div
      className="c2"
      data-mocked="Container"
    >
      <div>
        <div
          data-mocked="Header"
          variant="h2"
        >
          Error
        </div>
      </div>
      <div
        data-mocked="TextContent"
      >
        <p>
          get scene uri error
        </p>
      </div>
    </div>
  </div>
  <div
    className="c3"
    data-mocked="Box"
  >
    <div
      className="c4"
      data-mocked="Box"
    >
      <div
        className="c5"
        data-mocked="Box"
      />
    </div>
  </div>
</div>
`;
